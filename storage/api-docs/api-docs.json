{
    "openapi": "3.0.0",
    "info": {
        "title": "Lilypad API",
        "description": "API for lilypad",
        "version": "1.0.0"
    },
    "paths": {
        "/api/country-state/state": {
            "get": {
                "tags": [
                    "Country and State"
                ],
                "summary": "Get a state by ID",
                "description": "Retrieve a state by its ID.",
                "operationId": "4fab035acb6dcd837f1bfb7c51d25575",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "stateId"
                                ],
                                "properties": {
                                    "stateId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "State retrieved successfully."
                    },
                    "404": {
                        "description": "State not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "State not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Country and State"
                ],
                "summary": "Update a state",
                "description": "Update an existing state in the database.",
                "operationId": "8566f3993c0e1abaca75203a3ad4edc4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "stateId",
                                    "stateName",
                                    "stateCode",
                                    "countryId"
                                ],
                                "properties": {
                                    "stateId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "stateName": {
                                        "type": "string",
                                        "example": "California"
                                    },
                                    "stateCode": {
                                        "type": "string",
                                        "example": "CA"
                                    },
                                    "countryId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "State updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "State Updated Successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "State not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Country and State"
                ],
                "summary": "Create a new state",
                "description": "Store a new state in the database.",
                "operationId": "6f7a1b46fb23be8d8e2f2f7e6829f883",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "stateName",
                                    "stateCode",
                                    "countryId"
                                ],
                                "properties": {
                                    "stateName": {
                                        "type": "string",
                                        "example": "California"
                                    },
                                    "stateCode": {
                                        "type": "string",
                                        "example": "CA"
                                    },
                                    "countryId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "State created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "State Created Successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Country and State"
                ],
                "summary": "Delete a state",
                "description": "Delete an existing state from the database.",
                "operationId": "53cc0c8bcad0c7f29ff3fed19db20cee",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "stateId"
                                ],
                                "properties": {
                                    "stateId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "State deleted successfully."
                    },
                    "404": {
                        "description": "State not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "State not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/country-state/countries": {
            "get": {
                "tags": [
                    "Country and State"
                ],
                "summary": "Get all countries",
                "description": "Retrieve all countries from the database.",
                "operationId": "ce0b455ad419e648cc470f196f4c4a9e",
                "responses": {
                    "200": {
                        "description": "Countries retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "United States"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/country-state/states": {
            "get": {
                "tags": [
                    "Country and State"
                ],
                "summary": "Get all states",
                "description": "Retrieve all states from the database.",
                "operationId": "f667223c98c9e1136e9a655c34e402ff",
                "responses": {
                    "200": {
                        "description": "States retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "California"
                                            },
                                            "country_id": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/country-state/country": {
            "get": {
                "tags": [
                    "Country and State"
                ],
                "summary": "Get a country by ID",
                "description": "Retrieve a country by its ID.",
                "operationId": "214e2e615e81232537b99a89470a1a2d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "countryId"
                                ],
                                "properties": {
                                    "countryId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Country retrieved successfully."
                    },
                    "404": {
                        "description": "Country not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Country not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/currency": {
            "post": {
                "tags": [
                    "Currency"
                ],
                "summary": "Create a new currency",
                "description": "Creates a new currency with details such as name, code, active flag, and currency rates.",
                "operationId": "4bab1d22863d62e27b4898f5a89491d3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of the currency",
                                        "type": "string",
                                        "example": "US Dollar"
                                    },
                                    "code": {
                                        "description": "Currency code",
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "active": {
                                        "description": "Active status of the currency",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "quickBookCurrencyRate": {
                                        "description": "QuickBooks currency rate",
                                        "type": "number",
                                        "format": "float",
                                        "example": 1
                                    },
                                    "globalCurrencyRate": {
                                        "description": "Global currency rate",
                                        "type": "number",
                                        "format": "float",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Currency Created Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Currency Created Successfully!"
                                        },
                                        "data": {
                                            "description": "Created currency object",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get a specific customer by ID",
                "operationId": "09596dfb8b63806625b86768f4cf3cdd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customerId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Customer"
                ],
                "summary": "Update a customer",
                "operationId": "1000e3050354b6e61fba0cec61804ad1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customerId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 41,
                                        "nullable": true
                                    },
                                    "addressName": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "addressContact": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "addressType": {
                                        "type": "integer",
                                        "nullable": false
                                    },
                                    "isDefault": {
                                        "type": "boolean",
                                        "nullable": false
                                    },
                                    "address": {
                                        "type": "string",
                                        "maxLength": 90,
                                        "nullable": true
                                    },
                                    "city": {
                                        "type": "string",
                                        "maxLength": 30,
                                        "nullable": true
                                    },
                                    "state": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "zip": {
                                        "type": "string",
                                        "maxLength": 10,
                                        "nullable": true
                                    },
                                    "country": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "resident": {
                                        "type": "boolean",
                                        "nullable": false
                                    },
                                    "main": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "home": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "work": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "fax": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "nullable": false
                                    },
                                    "pager": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "web": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "other": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "currencyName": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "currencyRate": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": false
                                    },
                                    "group": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "creditLimit": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "nullable": true
                                    },
                                    "taxRate": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "salesman": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "defaultPriority": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "number": {
                                        "type": "string",
                                        "maxLength": 30,
                                        "nullable": true
                                    },
                                    "paymentTerms": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "taxExempt": {
                                        "type": "boolean",
                                        "nullable": true
                                    },
                                    "taxExemptNumber": {
                                        "type": "string",
                                        "maxLength": 30,
                                        "nullable": true
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "maxLength": 30,
                                        "nullable": true
                                    },
                                    "carrierName": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "carrierService": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "shippingTerms": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "alertNotes": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "quickBooksClassName": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "toBeEmailed": {
                                        "type": "boolean",
                                        "nullable": true
                                    },
                                    "toBePrinted": {
                                        "type": "boolean",
                                        "nullable": true
                                    },
                                    "issuableStatus": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "cf": {
                                        "type": "string",
                                        "nullable": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "customer": {
                                            "type": "object"
                                        },
                                        "address": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer Updated Successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            },
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Create a new customer",
                "description": "Store a new customer and their address.",
                "operationId": "e788a12c4fbd7937feab964d2e133089",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Acme Corp"
                                    },
                                    "addressName": {
                                        "type": "string",
                                        "example": "Headquarters"
                                    },
                                    "addressContact": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "addressType": {
                                        "type": "string",
                                        "example": "Home"
                                    },
                                    "isDefault": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "456 Business Rd"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Metropolis"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "California"
                                    },
                                    "zip": {
                                        "type": "string",
                                        "example": "98765"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "United States"
                                    },
                                    "currencyName": {
                                        "type": "string",
                                        "example": "US Dollar"
                                    },
                                    "currencyRate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1
                                    },
                                    "creditLimit": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50000
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "Normal"
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "taxRate": {
                                        "type": "string",
                                        "example": "Standard Tax"
                                    },
                                    "defaultPriority": {
                                        "type": "string",
                                        "example": "High"
                                    },
                                    "number": {
                                        "type": "string",
                                        "example": "CUST001"
                                    },
                                    "paymentTerms": {
                                        "type": "string",
                                        "example": "Net 30"
                                    },
                                    "taxExempt": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "taxExemptNumber": {
                                        "type": "string",
                                        "example": "TX123456"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "https://www.acmecorp.com"
                                    },
                                    "carrierName": {
                                        "type": "string",
                                        "example": "FedEx"
                                    },
                                    "carrierService": {
                                        "type": "string",
                                        "example": "Ground"
                                    },
                                    "shippingTerms": {
                                        "type": "string",
                                        "example": "Prepaid"
                                    },
                                    "quickBooksClassName": {
                                        "type": "string",
                                        "example": "Sales"
                                    },
                                    "toBeEmailed": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "toBePrinted": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "cf": {
                                        "type": "string",
                                        "example": "CustomFieldValue"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer Created Successfully!"
                                        },
                                        "customer": {
                                            "type": "object"
                                        },
                                        "address": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customer"
                ],
                "summary": "Delete a customer",
                "operationId": "4465ad7288b19b34f66c3ac80c9bf2c7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customerId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer Deleted Successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/customer": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get all customer",
                "operationId": "18dd4763caaa9ff531e95505ecc05eba",
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/inventory": {
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Store a new inventory item",
                "description": "This endpoint allows the user to create a new inventory item or update an existing one based on the part number and location.",
                "operationId": "5ca8e6a52f4241a17ccfef607c7252be",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "PartNumber": {
                                        "description": "The unique number of the part.",
                                        "type": "string",
                                        "example": "10010"
                                    },
                                    "PartDescription": {
                                        "description": "A brief description of the part.",
                                        "type": "string",
                                        "example": "High-quality widget"
                                    },
                                    "Location": {
                                        "description": "The location where the part is stored.",
                                        "type": "string",
                                        "example": "Main"
                                    },
                                    "Qty": {
                                        "description": "The quantity of the part being added to inventory.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "UOM": {
                                        "description": "The unit of measure for the part.",
                                        "type": "string",
                                        "example": "Kilogram"
                                    },
                                    "Cost": {
                                        "description": "The cost of the part.",
                                        "type": "number",
                                        "format": "float",
                                        "example": 25.5
                                    },
                                    "QbClass": {
                                        "description": "The QuickBooks class for the part.",
                                        "type": "string",
                                        "example": "Sales"
                                    },
                                    "Date": {
                                        "description": "The date when the inventory entry is created.",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-09-17"
                                    },
                                    "Note": {
                                        "description": "Any additional notes regarding the inventory.",
                                        "type": "string",
                                        "example": "New shipment received"
                                    },
                                    "TrackingType": {
                                        "description": "The type of tracking used for the part.",
                                        "type": "string",
                                        "example": "Lot Number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Inventory Created Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message indicating the inventory was created.",
                                            "type": "string",
                                            "example": "Inventory Created Successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Inventory has been updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message indicating the inventory was updated.",
                                            "type": "string",
                                            "example": "Inventory has been updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message indicating a validation issue.",
                                            "type": "string",
                                            "example": "UOM not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message indicating the requested resource was not found.",
                                            "type": "string",
                                            "example": "Part Tracking not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/location": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get location details",
                "description": "Retrieve a specific location by ID or all locations.",
                "operationId": "0b6b249e82a5fbc2822ff90759f06d29",
                "parameters": [
                    {
                        "name": "locationId",
                        "in": "query",
                        "description": "ID of the location to retrieve",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location details retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "location": {
                                            "type": "string",
                                            "example": "Main"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Primary storage location for all parts and materials."
                                        },
                                        "typeId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "locationGroupId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "defaultCustomerId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "activeFlag": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "countedAsAvailable": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-01-01T00:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-01-01T00:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Location"
                ],
                "summary": "Update a specific location",
                "description": "Update an existing location by ID using a JSON request body.",
                "operationId": "845c679ce12c06d90283e4dc961b22c7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "locationId"
                                ],
                                "properties": {
                                    "locationId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Main Updated"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description."
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Stock"
                                    },
                                    "locationGroup": {
                                        "type": "string",
                                        "example": "Main"
                                    },
                                    "customerName": {
                                        "type": "string",
                                        "example": "Acme Corp"
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "available": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "pickable": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "receivable": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "sortOrder": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location updated successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Location"
                ],
                "summary": "Create a new location",
                "description": "Store a new location in the database.",
                "operationId": "ad9c11703d1251e2b11e1e9b28561fc3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "location",
                                    "description",
                                    "type",
                                    "locationGroup",
                                    "customerName"
                                ],
                                "properties": {
                                    "location": {
                                        "type": "string",
                                        "example": "Main"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Primary storage location for all parts and materials."
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Stock"
                                    },
                                    "locationGroup": {
                                        "type": "string",
                                        "example": "Main"
                                    },
                                    "locationNum": {
                                        "type": "integer",
                                        "example": 101
                                    },
                                    "customerName": {
                                        "type": "string",
                                        "example": "Acme Corp"
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "available": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "pickable": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "receivable": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "sortOrder": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location Created Successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location type or customer not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Location"
                ],
                "summary": "Delete a specific location",
                "description": "Delete a specific location by ID using a JSON request body.",
                "operationId": "64ddcc48269b541bf3b8c0562c7e2b44",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "locationId"
                                ],
                                "properties": {
                                    "locationId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location deleted successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/part": {
            "get": {
                "tags": [
                    "Part"
                ],
                "summary": "Display a specified part",
                "description": "Retrieve a part by its ID.",
                "operationId": "812743b7dc49b976c3b3c163417ef22d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "partId"
                                ],
                                "properties": {
                                    "partId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Part retrieved successfully."
                    },
                    "404": {
                        "description": "Part not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Part not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Part"
                ],
                "summary": "Update a specific part",
                "description": "Updates the details of a specific part by `partId` from the JSON request.",
                "operationId": "830f973eb246fe5e1a4bade7267f3cbf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "partId",
                                    "partNumber",
                                    "partDescription",
                                    "partDetails",
                                    "uom",
                                    "upc",
                                    "partType",
                                    "active"
                                ],
                                "properties": {
                                    "partId": {
                                        "description": "Part ID",
                                        "type": "integer"
                                    },
                                    "partNumber": {
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "partDescription": {
                                        "type": "string",
                                        "example": "High-quality widget"
                                    },
                                    "partDetails": {
                                        "type": "string",
                                        "example": "Used in various applications, including XYZ"
                                    },
                                    "uom": {
                                        "type": "string",
                                        "example": "Kilogram"
                                    },
                                    "upc": {
                                        "type": "string",
                                        "example": "012345678912"
                                    },
                                    "partType": {
                                        "type": "string",
                                        "example": "Overhead"
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "abcCode": {
                                        "type": "string",
                                        "example": "A"
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1.5
                                    },
                                    "weightUom": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "width": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    },
                                    "length": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 20
                                    },
                                    "sizeUom": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "consumptionRate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0.5
                                    },
                                    "alertNote": {
                                        "type": "string",
                                        "example": "Handle with care; fragile"
                                    },
                                    "pictureUrl": {
                                        "type": "string",
                                        "example": "https://www.example.com/images/part123456.jpg"
                                    },
                                    "revision": {
                                        "type": "string",
                                        "example": "Rev1"
                                    },
                                    "poItemType": {
                                        "type": "string",
                                        "example": "Purchase"
                                    },
                                    "primaryTracking": {
                                        "type": "string",
                                        "example": "Expiration Date"
                                    },
                                    "nextValue": {
                                        "type": "string",
                                        "example": "Next123"
                                    },
                                    "cf": {
                                        "type": "string",
                                        "example": "CustomFieldValue"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Part updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product Updated Successfully!"
                                        },
                                        "partData": {
                                            "description": "Updated part details",
                                            "type": "object"
                                        },
                                        "partTrackingData": {
                                            "description": "Part tracking details",
                                            "type": "object"
                                        },
                                        "partToTrackingData": {
                                            "description": "Part to tracking details",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Part not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Part not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Part"
                ],
                "summary": "Create a new part",
                "description": "Store a new part in the database.",
                "operationId": "1fbde7332391b20785d97e41ffd399ed",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "partNumber",
                                    "partDescription",
                                    "partDetails",
                                    "uom",
                                    "upc",
                                    "partType",
                                    "active"
                                ],
                                "properties": {
                                    "partNumber": {
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "partDescription": {
                                        "type": "string",
                                        "example": "High-quality widget"
                                    },
                                    "partDetails": {
                                        "type": "string",
                                        "example": "Used in various applications, including XYZ"
                                    },
                                    "uom": {
                                        "type": "string",
                                        "example": "Kilogram"
                                    },
                                    "upc": {
                                        "type": "string",
                                        "example": "012345678912"
                                    },
                                    "partType": {
                                        "type": "string",
                                        "example": "Overhead"
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "abcCode": {
                                        "type": "string",
                                        "example": "A"
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1.5
                                    },
                                    "weightUom": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "width": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    },
                                    "length": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 20
                                    },
                                    "sizeUom": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "consumptionRate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0.5
                                    },
                                    "alertNote": {
                                        "type": "string",
                                        "example": "Handle with care; fragile"
                                    },
                                    "pictureUrl": {
                                        "type": "string",
                                        "example": "https://www.example.com/images/part123456.jpg"
                                    },
                                    "revision": {
                                        "type": "string",
                                        "example": "Rev1"
                                    },
                                    "poItemType": {
                                        "type": "string",
                                        "example": "Purchase"
                                    },
                                    "defaultOutsourcedReturnItem": {
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "primaryTracking": {
                                        "type": "string",
                                        "example": "Expiration Date"
                                    },
                                    "tracks": {
                                        "type": "string",
                                        "example": "Expiration Date"
                                    },
                                    "nextValue": {
                                        "type": "string",
                                        "example": "Next123"
                                    },
                                    "cf": {
                                        "type": "string",
                                        "example": "CustomFieldValue"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Part created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Part Created Successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Part"
                ],
                "summary": "Delete a specific part",
                "description": "Deletes a specific part by part ID provided in the JSON request body.",
                "operationId": "f5234bba641dca8d792a7ea3c684c9b5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "partId": {
                                        "description": "ID of the part to delete",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Part deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Part deleted successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Part not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Part not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/payment-terms": {
            "post": {
                "tags": [
                    "Payment Terms"
                ],
                "summary": "Create new payment terms",
                "description": "Creates new payment terms with provided details such as name, type, net days, discount, etc.",
                "operationId": "61c1e40f4832ba0a64d84880ecc46438",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "termsName": {
                                        "description": "Name of the payment terms",
                                        "type": "string",
                                        "example": "Net 30"
                                    },
                                    "termsType": {
                                        "description": "Type of payment terms",
                                        "type": "string",
                                        "example": "CCD"
                                    },
                                    "netDays": {
                                        "description": "Net days for the payment",
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "discount": {
                                        "description": "Discount percentage",
                                        "type": "number",
                                        "format": "float",
                                        "example": 5
                                    },
                                    "discountDays": {
                                        "description": "Days to apply the discount",
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "dueDate": {
                                        "description": "Due date for the payment",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-09-01"
                                    },
                                    "nextMonth": {
                                        "description": "Next month's date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-09-01"
                                    },
                                    "discountDate": {
                                        "description": "Discount date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-08-15"
                                    },
                                    "default": {
                                        "description": "Flag for default terms",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "active": {
                                        "description": "Flag for active status",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment Terms Created Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment Terms Created Successfully!"
                                        },
                                        "data": {
                                            "description": "Created payment terms object",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pick": {
            "get": {
                "tags": [
                    "Pick"
                ],
                "summary": "Show all picks or a specific pick",
                "description": "Retrieve all picks or a specific pick by ID using a JSON request body.",
                "operationId": "5aa36275846f0b20338528d2269d885d",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pickId": {
                                        "description": "The ID of the pick to retrieve.",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Picks retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "picks": {
                                            "description": "Array of all pick objects or a single pick object.",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pick not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Pick"
                ],
                "summary": "Update a specific pick",
                "description": "Update an existing pick by ID using a JSON request body.",
                "operationId": "d7770ff8cea218d2c93b560707189b43",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pickId"
                                ],
                                "properties": {
                                    "pickId": {
                                        "description": "The ID of the pick to update.",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "locationName": {
                                        "description": "Updated location name.",
                                        "type": "string",
                                        "example": "Main Updated"
                                    },
                                    "partNum": {
                                        "description": "Updated part number.",
                                        "type": "string",
                                        "example": "10002"
                                    },
                                    "trackingInfo": {
                                        "description": "Updated tracking information.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "LT0001"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pick updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message indicating the pick was updated.",
                                            "type": "string",
                                            "example": "Pick updated successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pick not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Pick"
                ],
                "summary": "Store a new pick",
                "description": "This endpoint allows the user to create a new pick entry based on the sales order and tracking information.",
                "operationId": "71b5589fb3aa282a5eb05a2d213351cc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pickNum": {
                                        "description": "The Sales Order number for the pick.",
                                        "type": "integer",
                                        "example": 10001
                                    },
                                    "locationName": {
                                        "description": "The name of the location from which the pick is made.",
                                        "type": "string",
                                        "example": "Main"
                                    },
                                    "partNum": {
                                        "description": "The part number being picked.",
                                        "type": "string",
                                        "example": "10002"
                                    },
                                    "partTrackingType": {
                                        "description": "The type of tracking for the part.",
                                        "type": "string",
                                        "example": "Lot Number"
                                    },
                                    "trackingInfo": {
                                        "description": "An array of tracking information related to the pick.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "LT0001"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Picked Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message indicating the pick was created.",
                                            "type": "string",
                                            "example": "Picked Successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message indicating the requested resource was not found.",
                                            "type": "string",
                                            "example": "Sales Order with pickNum 10001 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message indicating a validation issue.",
                                            "type": "string",
                                            "example": "Insufficient quantity."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Pick"
                ],
                "summary": "Delete a specific pick",
                "description": "Delete a specific pick by ID using a JSON request body.",
                "operationId": "6e1278676c5f9c3f832d84fe0df2b7d5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pickId"
                                ],
                                "properties": {
                                    "pickId": {
                                        "description": "The ID of the pick to delete.",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pick deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pick deleted successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pick not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pick-finish": {
            "post": {
                "tags": [
                    "Pick"
                ],
                "summary": "Finish pick items",
                "description": "Mark specified pick items as finished and create corresponding shipments.",
                "operationId": "f9353a54cace82ed6efd174fc6ba183c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "pickItemId": {
                                            "description": "The ID of the pick item to be finished",
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pick item finished successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pick Item is Finish"
                                        },
                                        "ship": {
                                            "type": "object"
                                        },
                                        "shipItem": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pick-start": {
            "post": {
                "tags": [
                    "Pick"
                ],
                "summary": "Start picking items for a sales order",
                "description": "Marks specified sales order items as started and updates their statuses.",
                "operationId": "26a993aad59fe255afb22ccec37a7b30",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "soItemId": {
                                            "description": "The ID of the sales order item to start picking",
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pick items started successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pick Item has started"
                                        },
                                        "pickItems": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "api/product": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Products",
                "description": "Retrieves products. If productId is provided in the request body, returns that product; otherwise, returns all products.",
                "operationId": "7cc0adaaf98acb6fe42e90323c70bde9",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "productId": {
                                        "description": "ID of the product to retrieve",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update a Product",
                "description": "Updates an existing product based on the provided productId in the request body.",
                "operationId": "59cf3d8432b8ba2b15c05990feefebde",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "productId": {
                                        "description": "ID of the product to update",
                                        "type": "integer"
                                    },
                                    "partNumber": {
                                        "description": "Part number of the product",
                                        "type": "string"
                                    },
                                    "productNumber": {
                                        "description": "Unique product number",
                                        "type": "string"
                                    },
                                    "productDescription": {
                                        "description": "Description of the product",
                                        "type": "string"
                                    },
                                    "productDetails": {
                                        "description": "Detailed information about the product",
                                        "type": "string"
                                    },
                                    "uom": {
                                        "description": "Unit of Measure (e.g., Kilogram)",
                                        "type": "string"
                                    },
                                    "price": {
                                        "description": "Price of the product",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "class": {
                                        "description": "Class or category of the product",
                                        "type": "string"
                                    },
                                    "active": {
                                        "description": "Whether the product is active",
                                        "type": "boolean"
                                    },
                                    "taxable": {
                                        "description": "Whether the product is taxable",
                                        "type": "boolean"
                                    },
                                    "combo": {
                                        "description": "Whether the product is a combo product",
                                        "type": "boolean"
                                    },
                                    "allowUom": {
                                        "description": "Whether sellable in other UOMs",
                                        "type": "boolean"
                                    },
                                    "productUrl": {
                                        "description": "URL of the product",
                                        "type": "string"
                                    },
                                    "productPictureUrl": {
                                        "description": "Picture URL of the product",
                                        "type": "string"
                                    },
                                    "productUpc": {
                                        "description": "UPC code of the product",
                                        "type": "string"
                                    },
                                    "productSku": {
                                        "description": "SKU of the product",
                                        "type": "string"
                                    },
                                    "productSoItemType": {
                                        "description": "Sales Order Item Type of the product",
                                        "type": "string"
                                    },
                                    "incomeAccount": {
                                        "description": "Income account associated with the product",
                                        "type": "string"
                                    },
                                    "weight": {
                                        "description": "Weight of the product",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "weightUom": {
                                        "description": "Unit of Measure for the weight",
                                        "type": "string"
                                    },
                                    "width": {
                                        "description": "Width of the product",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "height": {
                                        "description": "Height of the product",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "length": {
                                        "description": "Length of the product",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "sizeUom": {
                                        "description": "Unit of Measure for size (e.g., cm)",
                                        "type": "string"
                                    },
                                    "default": {
                                        "description": "Whether this is the default product configuration",
                                        "type": "boolean"
                                    },
                                    "alertNote": {
                                        "description": "Any alert notes related to the product",
                                        "type": "string"
                                    },
                                    "cartonCount": {
                                        "description": "Number of cartons for packaging",
                                        "type": "integer"
                                    },
                                    "cartonType": {
                                        "description": "Type of carton used for packaging",
                                        "type": "string"
                                    },
                                    "cf": {
                                        "description": "Custom field value",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "product": {
                                            "description": "Updated product",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create a new Product",
                "description": "Creates a new product based on the provided details.",
                "operationId": "12cdce28622133c851192d5e720e2cd6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "partNumber": {
                                        "description": "Part number of the product",
                                        "type": "string"
                                    },
                                    "productNumber": {
                                        "description": "Unique product number",
                                        "type": "string"
                                    },
                                    "productDescription": {
                                        "description": "Description of the product",
                                        "type": "string"
                                    },
                                    "productDetails": {
                                        "description": "Detailed information about the product",
                                        "type": "string"
                                    },
                                    "uom": {
                                        "description": "Unit of Measure (e.g., Kilogram)",
                                        "type": "string"
                                    },
                                    "price": {
                                        "description": "Price of the product",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "class": {
                                        "description": "Class or category of the product",
                                        "type": "string"
                                    },
                                    "active": {
                                        "description": "Whether the product is active",
                                        "type": "boolean"
                                    },
                                    "taxable": {
                                        "description": "Whether the product is taxable",
                                        "type": "boolean"
                                    },
                                    "combo": {
                                        "description": "Whether the product is a combo product",
                                        "type": "boolean"
                                    },
                                    "allowUom": {
                                        "description": "Whether sellable in other UOMs",
                                        "type": "boolean"
                                    },
                                    "productUrl": {
                                        "description": "URL of the product",
                                        "type": "string"
                                    },
                                    "productPictureUrl": {
                                        "description": "Picture URL of the product",
                                        "type": "string"
                                    },
                                    "productUpc": {
                                        "description": "UPC code of the product",
                                        "type": "string"
                                    },
                                    "productSku": {
                                        "description": "SKU of the product",
                                        "type": "string"
                                    },
                                    "productSoItemType": {
                                        "description": "Sales Order Item Type of the product",
                                        "type": "string"
                                    },
                                    "incomeAccount": {
                                        "description": "Income account associated with the product",
                                        "type": "string"
                                    },
                                    "weight": {
                                        "description": "Weight of the product",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "weightUom": {
                                        "description": "Unit of Measure for the weight",
                                        "type": "string"
                                    },
                                    "width": {
                                        "description": "Width of the product",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "height": {
                                        "description": "Height of the product",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "length": {
                                        "description": "Length of the product",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "sizeUom": {
                                        "description": "Unit of Measure for size (e.g., cm)",
                                        "type": "string"
                                    },
                                    "default": {
                                        "description": "Whether this is the default product configuration",
                                        "type": "boolean"
                                    },
                                    "alertNote": {
                                        "description": "Any alert notes related to the product",
                                        "type": "string"
                                    },
                                    "cartonCount": {
                                        "description": "Number of cartons for packaging",
                                        "type": "integer"
                                    },
                                    "cartonType": {
                                        "description": "Type of carton used for packaging",
                                        "type": "string"
                                    },
                                    "cf": {
                                        "description": "Custom field value",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "product": {
                                            "description": "The newly created product",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete a Product",
                "description": "Deletes a product based on the provided productId in the request body.",
                "operationId": "46a878869b5f8aa88674b88f71af606c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "productId": {
                                        "description": "ID of the product to delete",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "api/purchase-order": {
            "post": {
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Create a new Purchase Order",
                "description": "Creates a new Purchase Order with items and returns the created data.",
                "operationId": "bab02655b63f5c7417208c5c8d19f7d2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "PONum": {
                                        "description": "Purchase Order Number",
                                        "type": "string"
                                    },
                                    "buyerId": {
                                        "description": "ID of the buyer",
                                        "type": "integer"
                                    },
                                    "dateIssued": {
                                        "description": "Issued date of the Purchase Order",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "taxRateName": {
                                        "description": "Tax rate associated with the Purchase Order",
                                        "type": "string"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "PartNumber": {
                                                    "description": "Part number",
                                                    "type": "string"
                                                },
                                                "UOM": {
                                                    "description": "Unit of Measure",
                                                    "type": "string"
                                                },
                                                "VendorPartNumber": {
                                                    "description": "Vendor part number",
                                                    "type": "string"
                                                },
                                                "FulfillmentDate": {
                                                    "description": "Scheduled fulfillment date",
                                                    "type": "string",
                                                    "format": "date"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "currencyRate": {
                                        "description": "Currency rate",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "statusId": {
                                        "description": "Purchase Order status",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Purchase Order successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Response message",
                                            "type": "string"
                                        },
                                        "purchaseOrderData": {
                                            "description": "Created Purchase Order data",
                                            "type": "object"
                                        },
                                        "purchaseOrderItemData": {
                                            "description": "Items associated with the Purchase Order",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "partNum": {
                                                        "description": "Part number",
                                                        "type": "string"
                                                    },
                                                    "qtyToFulfill": {
                                                        "description": "Quantity to fulfill",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "receiptData": {
                                            "description": "Receipt data",
                                            "type": "object"
                                        },
                                        "receiptItemData": {
                                            "description": "Receipt items",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "receiptId": {
                                                        "description": "Receipt ID",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict: Purchase Order number must be unique",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/purchase-order": {
            "get": {
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Retrieve Purchase Orders",
                "description": "Fetches the details of a specific Purchase Order by `poId` from the JSON request body. If no `poId` is provided, it fetches all Purchase Orders.",
                "operationId": "349a33a86210dc518f21683057a58abe",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "poId": {
                                        "description": "Purchase Order ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "description": "Purchase order details or list of all purchase orders",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Purchase Order not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Update a specific Purchase Order",
                "description": "Updates the details of a specific Purchase Order by `poId` from the JSON request.",
                "operationId": "d1405805638b50990d5652fced402b34",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "poId": {
                                        "description": "Purchase Order ID",
                                        "type": "integer"
                                    },
                                    "status": {
                                        "description": "New status of the purchase order",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Purchase Order not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Delete a specific Purchase Order",
                "description": "Deletes a specific Purchase Order by `poId` from the JSON request.",
                "operationId": "1b094c41e90e078436666f98ad745a1a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "poId": {
                                        "description": "Purchase Order ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Purchase Order not found"
                    }
                }
            }
        },
        "/api/qbclass": {
            "post": {
                "tags": [
                    "QuickBookClass"
                ],
                "summary": "Create a new QuickBook class",
                "operationId": "f3626939993d4d75acced515ebca7933",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Sales"
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Quick Book Class Created Successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quick Book Class Created Successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/receipt-fulfilled": {
            "post": {
                "tags": [
                    "Receipt"
                ],
                "summary": "Fulfill a receipt item",
                "description": "Marks a receipt item as fulfilled by updating its status.",
                "operationId": "385c5d5fb3d0ee4b7f7fb1f36694bc93",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "receiptItemId": {
                                        "description": "ID of the receipt item to be fulfilled",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Receipt Item fulfilled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Receipt Item fulfilled"
                                        },
                                        "receiptItem": {
                                            "description": "Details of the fulfilled receipt item",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "statusId": {
                                                    "type": "integer",
                                                    "example": 40
                                                },
                                                "dateLastModified": {
                                                    "type": "string",
                                                    "example": "2024-10-18 15:30:00"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "receipt": {
                                            "description": "Details of the related receipt",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "statusId": {
                                                    "type": "integer",
                                                    "example": 40
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/receipt-reconciled": {
            "post": {
                "tags": [
                    "Receipt"
                ],
                "summary": "Reconcile a receipt item",
                "description": "Reconciles a receipt item by updating its status and reconciliation date.",
                "operationId": "d61e340518b250bf105906521566e009",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "receiptItemId": {
                                        "description": "ID of the receipt item to be reconciled",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Receipt Item reconciled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Receipt Item reconciled"
                                        },
                                        "receiptItem": {
                                            "description": "Details of the reconciled receipt item",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "statusId": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "dateReconciled": {
                                                    "type": "string",
                                                    "example": "2024-10-18 15:30:00"
                                                },
                                                "dateLastModified": {
                                                    "type": "string",
                                                    "example": "2024-10-18 15:30:00"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "receipt": {
                                            "description": "Details of the related receipt",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "statusId": {
                                                    "type": "integer",
                                                    "example": 20
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/receiving": {
            "post": {
                "tags": [
                    "Receiving"
                ],
                "summary": "Receives parts from a purchase order.",
                "description": "Endpoint to receive parts from a purchase order into inventory.",
                "operationId": "d4fa36b42c27f255705eb749d4e75a5d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "PONum": {
                                        "description": "The purchase order number used to order the received parts.",
                                        "type": "string",
                                        "maxLength": 25,
                                        "example": "123"
                                    },
                                    "Fulfill": {
                                        "description": "Indicates whether the line item will be fulfilled or received only.",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "VendorPartNum": {
                                        "description": "The vendor part number.",
                                        "type": "string",
                                        "maxLength": 50,
                                        "example": "1001"
                                    },
                                    "Qty": {
                                        "description": "The quantity of parts received.",
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "Location": {
                                        "description": "The location to receive the parts into.",
                                        "type": "string",
                                        "example": "Main"
                                    },
                                    "Date": {
                                        "description": "The date the parts were received.",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-10-09"
                                    },
                                    "ShippingTrackingNumber": {
                                        "description": "The shipping tracking number.",
                                        "type": "string",
                                        "example": "1001"
                                    },
                                    "ShippingPackageCount": {
                                        "description": "The package count for the shipment.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "ShippingCarrier": {
                                        "description": "The carrier used for shipping.",
                                        "type": "string",
                                        "example": "Delivery"
                                    },
                                    "ShippingCarrierService": {
                                        "description": "The shipping carrier's service level.",
                                        "type": "string",
                                        "example": "Express Saver"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Receiving details successfully recorded."
                    },
                    "400": {
                        "description": "Bad request. Missing or incorrect parameters."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/api/receipt-void/{receiptItemId}": {
            "delete": {
                "tags": [
                    "Receipt"
                ],
                "summary": "Void a receipt item",
                "description": "Deletes (voids) a receipt item by its ID.",
                "operationId": "97e59ca32d91526ddfe8f59cf35c1544",
                "parameters": [
                    {
                        "name": "receiptItemId",
                        "in": "path",
                        "description": "ID of the receipt item to be voided",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Receipt Item Void successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Receipt Item Void successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sales-order": {
            "get": {
                "tags": [
                    "Sales Order"
                ],
                "summary": "Retrieve sales orders",
                "description": "Fetches a single sales order by ID or retrieves all sales orders if no ID is provided.",
                "operationId": "ce62b39c903b9981b5c13efd2c6f3a33",
                "parameters": [
                    {
                        "name": "soId",
                        "in": "query",
                        "description": "The ID of the sales order to retrieve",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of sales orders."
                    },
                    "404": {
                        "description": "Sales Order not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sales Order not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Sales Order"
                ],
                "summary": "Update a sales order",
                "operationId": "0d937c8457af9d1c69b59dc1f15a2fe7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "soId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "customerContact": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "billToName": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "billToAddress": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "billToCity": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "billToZip": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "shipToName": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "shipToAddress": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "shipToCity": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "shipToZip": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "vendorPONum": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "nullable": true
                                    },
                                    "dateExpired": {
                                        "type": "string",
                                        "format": "date",
                                        "nullable": true
                                    },
                                    "salesman": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "priorityId": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "paymentTerms": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "fob": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "note": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "locationGroupName": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "phone": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "nullable": true
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "nullable": true
                                    },
                                    "category": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "customField": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "currencyRate": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    },
                                    "flag": {
                                        "type": "boolean",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "note": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "soItemTypeId": {
                                                    "type": "integer",
                                                    "nullable": true
                                                },
                                                "uom": {
                                                    "type": "integer",
                                                    "nullable": true
                                                },
                                                "productNumber": {
                                                    "type": "string",
                                                    "nullable": false
                                                },
                                                "showItem": {
                                                    "type": "boolean",
                                                    "nullable": true
                                                },
                                                "taxCode": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "taxable": {
                                                    "type": "boolean",
                                                    "nullable": true
                                                },
                                                "customerPartNumber": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "productDescription": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "productQuantity": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "nullable": false
                                                },
                                                "productPrice": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "nullable": false
                                                },
                                                "itemDateScheduled": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "nullable": true
                                                },
                                                "revisionLevel": {
                                                    "type": "integer",
                                                    "nullable": true
                                                },
                                                "cfi": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "itemQuickBooksClassName": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "billToCountry": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "billToState": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "shipToCountry": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "shipToState": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "quickBookClassName": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "currencyName": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "carrierName": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "carrierService": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "taxRateName": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "shippingTerms": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "shipToResidential": {
                                        "type": "boolean",
                                        "nullable": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sales order updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sales Order updated successfully"
                                        },
                                        "salesOrderData": {
                                            "type": "object"
                                        },
                                        "salesOrderItemData": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sales order not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            },
            "post": {
                "tags": [
                    "Sales Order"
                ],
                "summary": "Create a new Sales Order",
                "operationId": "c8e19929ea3d9b1755c7db98cd90ef66",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "flag": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "soNum": {
                                        "type": "integer",
                                        "example": 10001
                                    },
                                    "customerName": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "customerContact": {
                                        "type": "string",
                                        "example": "Jane Smith"
                                    },
                                    "billToName": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "billToAddress": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "billToCity": {
                                        "type": "string",
                                        "example": "Springfield"
                                    },
                                    "billToState": {
                                        "type": "string",
                                        "example": "California"
                                    },
                                    "billToZip": {
                                        "type": "string",
                                        "example": "62701"
                                    },
                                    "billToCountry": {
                                        "type": "string",
                                        "example": "United States"
                                    },
                                    "shipToName": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "shipToAddress": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "shipToCity": {
                                        "type": "string",
                                        "example": "Springfield"
                                    },
                                    "shipToState": {
                                        "type": "string",
                                        "example": "California"
                                    },
                                    "shipToZip": {
                                        "type": "string",
                                        "example": "62701"
                                    },
                                    "shipToCountry": {
                                        "type": "string",
                                        "example": "United States"
                                    },
                                    "shipToResidential": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "carrierName": {
                                        "type": "string",
                                        "example": "Delivery"
                                    },
                                    "carrierService": {
                                        "type": "string",
                                        "example": "Ground"
                                    },
                                    "taxRateName": {
                                        "type": "string",
                                        "example": "Standard Tax"
                                    },
                                    "priorityId": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "poNum": {
                                        "type": "string",
                                        "example": "PO123456"
                                    },
                                    "vendorPONum": {
                                        "type": "string",
                                        "example": "VendorPO123"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-08-23"
                                    },
                                    "orderDateScheduled": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-08-25"
                                    },
                                    "dateExpired": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-09-01"
                                    },
                                    "salesman": {
                                        "type": "string",
                                        "example": "Salesperson A"
                                    },
                                    "shippingTerms": {
                                        "type": "string",
                                        "example": "Prepaid"
                                    },
                                    "paymentTerms": {
                                        "type": "string",
                                        "example": "Net 30"
                                    },
                                    "fob": {
                                        "type": "string",
                                        "example": "FOB Destination"
                                    },
                                    "note": {
                                        "type": "string",
                                        "example": "This is a note"
                                    },
                                    "quickBookClassName": {
                                        "type": "string",
                                        "example": "Sales"
                                    },
                                    "locationGroupName": {
                                        "type": "string",
                                        "example": "Main"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1-555-555-5555"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "http://example.com"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "Electronics"
                                    },
                                    "customField": {
                                        "type": "string",
                                        "example": "CustomValue"
                                    },
                                    "currencyName": {
                                        "type": "string",
                                        "example": "US Dollar"
                                    },
                                    "currencyRate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1
                                    },
                                    "priceIsHomeCurrency": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "flag": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "soItemTypeId": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "productNumber": {
                                                    "type": "string",
                                                    "example": "CK100"
                                                },
                                                "productDescription": {
                                                    "type": "string",
                                                    "example": "Product Description"
                                                },
                                                "productQuantity": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "uom": {
                                                    "type": "string",
                                                    "example": "Foot"
                                                },
                                                "productPrice": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50
                                                },
                                                "taxable": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "taxCode": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "note": {
                                                    "type": "string",
                                                    "example": "Item Note"
                                                },
                                                "itemQuickBooksClassName": {
                                                    "type": "string",
                                                    "example": "Sales"
                                                },
                                                "itemDateScheduled": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-08-30"
                                                },
                                                "showItem": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "revisionLevel": {
                                                    "type": "string",
                                                    "example": "Rev1"
                                                },
                                                "customerPartNumber": {
                                                    "type": "string",
                                                    "example": "CustPart123"
                                                },
                                                "kitItem": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "cfi": {
                                                    "type": "string",
                                                    "example": "CFIValue"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sales Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sales Order created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The Sales Order number must be unique"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Sales Order"
                ],
                "summary": "Delete a sales order",
                "description": "Delete an existing sales order from the database.",
                "operationId": "bb5514281f7c86f21a748c5f1fd62819",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "soId"
                                ],
                                "properties": {
                                    "soId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sales Order deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sales Order Deleted Successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sales Order not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sales Order not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pack": {
            "post": {
                "tags": [
                    "Pack"
                ],
                "summary": "Update the status of a shipment to packed",
                "description": "Marks a shipment as packed based on the provided ship ID.",
                "operationId": "bab609f2971ca90e2c012303916feaaf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "shipId": {
                                        "description": "The ID of the shipment to update",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Shipment status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Packed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ship": {
            "post": {
                "tags": [
                    "Ship"
                ],
                "summary": "Update the status of a shipment",
                "description": "Marks a shipment as shipped and updates the related sales order and sales order items statuses.",
                "operationId": "dba40374a824f7515a321d040106714c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "shipId": {
                                        "description": "The ID of the shipment to update",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Shipment status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Shipped"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tax-rate": {
            "post": {
                "tags": [
                    "TaxRate"
                ],
                "summary": "Create a new tax rate",
                "operationId": "3ad00ce057a88a58ffd7ff8b966d3c94",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "taxName": {
                                        "type": "string",
                                        "example": "Standard Tax"
                                    },
                                    "taxCode": {
                                        "type": "string",
                                        "example": "STX"
                                    },
                                    "taxType": {
                                        "type": "string",
                                        "example": "Percentage"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Standard sales tax rate"
                                    },
                                    "rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0.07
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100
                                    },
                                    "taxAgencyName": {
                                        "type": "string",
                                        "example": "IRS"
                                    },
                                    "defaultFlag": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "activeFlag": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tax Rate Created Successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tax Rate Created Successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Logs in a user with email and password and returns an API token with user permissions.",
                "operationId": "0fc9610184083ac6dddab2c63139225a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "description": "The generated API token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/create-permission": {
            "post": {
                "tags": [
                    "User Permissions"
                ],
                "summary": "Create a new permission",
                "description": "Creates a new permission and optionally assigns it to a role.",
                "operationId": "ba364b9963dc931b4c20deaf08bc4a93",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "The name of the permission",
                                        "type": "string",
                                        "example": "edit-post"
                                    },
                                    "role": {
                                        "description": "Optional role to assign the permission to",
                                        "type": "string",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Permission created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "permission": {
                                            "description": "The created permission details",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/create-role": {
            "post": {
                "tags": [
                    "User Roles"
                ],
                "summary": "Create a new role",
                "description": "Creates a new role with optional permissions.",
                "operationId": "ecf4a937291b9e19063e8be9998354a3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "The name of the role",
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "permissions": {
                                        "description": "List of permissions to assign to the role",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role": {
                                            "description": "The created role details",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/assign-role": {
            "post": {
                "tags": [
                    "User Roles"
                ],
                "summary": "Assign a role to a user",
                "description": "Assigns a role to an existing user.",
                "operationId": "627af9ebf9a356078b54f5f9dadc892b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "role",
                                    "userId"
                                ],
                                "properties": {
                                    "role": {
                                        "description": "The name of the role",
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "userId": {
                                        "description": "The ID of the user to assign the role to",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role assigned successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/assign-permission": {
            "post": {
                "tags": [
                    "User Permissions"
                ],
                "summary": "Assign permissions to a role",
                "description": "Assigns one or more permissions to an existing role.",
                "operationId": "5ed19693a2700333824214296e6a6e0d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "role",
                                    "permissions"
                                ],
                                "properties": {
                                    "role": {
                                        "description": "The name of the role",
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "permissions": {
                                        "description": "Comma-separated list of permissions",
                                        "type": "string",
                                        "example": "create-post,edit-post"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions assigned successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/permissions": {
            "get": {
                "tags": [
                    "User Permissions"
                ],
                "summary": "Get User Permissions",
                "operationId": "fa897792ffaf66d74bbdd91d111cdc50",
                "responses": {
                    "200": {
                        "description": "Permissions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "api/vendor": {
            "post": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Create a new vendor",
                "operationId": "eb42dea4537e10a0bf874e868f8da675",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "addressName": {
                                        "type": "string",
                                        "example": "Headquarter"
                                    },
                                    "addressContact": {
                                        "type": "string",
                                        "example": "Jane Smith"
                                    },
                                    "addressType": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "isDefault": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Springfield"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "California"
                                    },
                                    "zip": {
                                        "type": "string",
                                        "example": "12345"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "United States"
                                    },
                                    "main": {
                                        "type": "string",
                                        "example": "555-1234"
                                    },
                                    "home": {
                                        "type": "string",
                                        "example": "555-5678"
                                    },
                                    "work": {
                                        "type": "string",
                                        "example": "555-8765"
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "example": "555-4321"
                                    },
                                    "fax": {
                                        "type": "string",
                                        "example": "555-9876"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "example@example.com"
                                    },
                                    "pager": {
                                        "type": "string",
                                        "example": "555-6789"
                                    },
                                    "web": {
                                        "type": "string",
                                        "example": "https://www.example.com"
                                    },
                                    "other": {
                                        "type": "string",
                                        "example": "N/A"
                                    },
                                    "currencyName": {
                                        "type": "string",
                                        "example": "US Dollar"
                                    },
                                    "currencyRate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1
                                    },
                                    "defaultTerms": {
                                        "type": "string",
                                        "example": "Net 30"
                                    },
                                    "defaultCarrier": {
                                        "type": "string",
                                        "example": "FedEx"
                                    },
                                    "defaultShippingTerms": {
                                        "type": "string",
                                        "example": "Prepaid"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "Normal"
                                    },
                                    "accountNumber": {
                                        "type": "string",
                                        "example": "A123456789"
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "minOrderAmount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100
                                    },
                                    "alertNotes": {
                                        "type": "string",
                                        "example": "Handle with care"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "https://www.examplevendor.com"
                                    },
                                    "cf": {
                                        "type": "string",
                                        "example": "CF123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vendor Created Successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vendor Created Successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/vendor": {
            "get": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Get vendor(s) details",
                "description": "Retrieve a specific vendor's information by their ID from a JSON request body. If no vendorId is provided, return all vendors.",
                "operationId": "getVendor",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vendorId": {
                                        "description": "ID of the vendor to retrieve",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vendor(s) details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Vendor Name"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "vendor@example.com"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "123 Vendor Street"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "123-456-7890"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Vendor Name"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "vendor@example.com"
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "123 Vendor Street"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "123-456-7890"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vendor not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vendor not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Update an existing vendor",
                "description": "Updates a vendor based on the JSON request data",
                "operationId": "updateVendor",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vendorId": {
                                        "description": "Vendor ID",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "Vendor name",
                                        "type": "string"
                                    },
                                    "addressName": {
                                        "description": "Address name",
                                        "type": "string"
                                    },
                                    "state": {
                                        "description": "State",
                                        "type": "string"
                                    },
                                    "country": {
                                        "description": "Country",
                                        "type": "string"
                                    },
                                    "currencyName": {
                                        "description": "Currency name",
                                        "type": "string"
                                    },
                                    "defaultCarrier": {
                                        "description": "Default carrier",
                                        "type": "string"
                                    },
                                    "defaultShippingTerms": {
                                        "description": "Default shipping terms",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Vendor status",
                                        "type": "string"
                                    },
                                    "address": {
                                        "description": "Address",
                                        "type": "string"
                                    },
                                    "city": {
                                        "description": "City",
                                        "type": "string"
                                    },
                                    "zip": {
                                        "description": "ZIP code",
                                        "type": "string"
                                    },
                                    "active": {
                                        "description": "Is vendor active",
                                        "type": "boolean"
                                    },
                                    "alertNotes": {
                                        "description": "Alert notes",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "example": {
                                "vendorId": 1,
                                "name": "Updated Vendor",
                                "addressName": "Vendor HQ",
                                "state": "California",
                                "country": "United States",
                                "currencyName": "USD",
                                "defaultCarrier": "FedEx",
                                "defaultShippingTerms": "FOB",
                                "status": "Active",
                                "address": "123 Main St",
                                "city": "Los Angeles",
                                "zip": "90001",
                                "active": true,
                                "alertNotes": "Handle with care"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vendor updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vendor Updated Successfully!"
                                        },
                                        "vendor": {
                                            "type": "object"
                                        },
                                        "address": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vendor not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vendor not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Delete a specific vendor",
                "description": "Deletes a specific vendor by vendor ID provided in the JSON request body.",
                "operationId": "fd3e6228ce5d8a49515a6312386d314f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vendorId": {
                                        "description": "ID of the vendor to delete",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vendor deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vendor Deleted Successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vendor not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vendor not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Country and State",
            "description": "Country and State"
        },
        {
            "name": "Currency",
            "description": "Currency"
        },
        {
            "name": "Customer",
            "description": "Customer"
        },
        {
            "name": "Inventory",
            "description": "Inventory"
        },
        {
            "name": "Location",
            "description": "Location"
        },
        {
            "name": "Part",
            "description": "Part"
        },
        {
            "name": "Payment Terms",
            "description": "Payment Terms"
        },
        {
            "name": "Pick",
            "description": "Pick"
        },
        {
            "name": "Product",
            "description": "Product"
        },
        {
            "name": "Purchase Order",
            "description": "Purchase Order"
        },
        {
            "name": "QuickBookClass",
            "description": "QuickBookClass"
        },
        {
            "name": "Receipt",
            "description": "Receipt"
        },
        {
            "name": "Receiving",
            "description": "Receiving"
        },
        {
            "name": "Sales Order",
            "description": "Sales Order"
        },
        {
            "name": "Pack",
            "description": "Pack"
        },
        {
            "name": "Ship",
            "description": "Ship"
        },
        {
            "name": "TaxRate",
            "description": "TaxRate"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "User Permissions",
            "description": "User Permissions"
        },
        {
            "name": "User Roles",
            "description": "User Roles"
        },
        {
            "name": "Vendor",
            "description": "Vendor"
        }
    ]
}